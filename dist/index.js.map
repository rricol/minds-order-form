{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/utils/pricing.ts", "../src/utils/productManager.ts", "../src/utils/cookieManager.ts", "../src/utils/eventHandlers.ts", "../src/utils/stepsManager.ts", "../src/index.ts"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "import { getCookie } from './cookieManager';\n\ninterface Product {\n  type: string;\n  title: string;\n  quantity: number;\n  quantityA3?: number;\n  quantityA2?: number;\n}\n\nexport function calculatePricing(): void {\n  const products: Product[] = getCookie('selectedProducts') || [];\n  let total = 0;\n\n  products.forEach((product) => {\n    const { type, quantity, quantityA3 = 0, quantityA2 = 0 } = product;\n    if (type === 'Infographie') {\n      total += quantityA2 * 6 + quantityA3 * (quantityA3 < 10 ? 4 : 3);\n    } else if (type === 'Brochure') {\n      total += quantity * (quantity < 10 ? 9 : quantity < 30 ? 8 : 7);\n    } else if (type === 'Publication') {\n      total += quantity * (quantity < 5 ? 16 : quantity < 10 ? 14 : 13);\n    }\n  });\n\n  const countTotalElement = document.querySelector('[data-count-total]') as HTMLElement;\n  countTotalElement.innerHTML = total.toString();\n}\n\nexport function getPricing(): string {\n  const products: Product[] = getCookie('selectedProducts') || [];\n  let total = 0;\n\n  products.forEach((product) => {\n    const { type, quantity, quantityA3 = 0, quantityA2 = 0 } = product;\n    if (type === 'Infographie') {\n      total += quantityA2 * 6 + quantityA3 * (quantityA3 < 10 ? 4 : 3);\n    } else if (type === 'Brochure') {\n      total += quantity * (quantity < 10 ? 9 : quantity < 30 ? 8 : 7);\n    } else if (type === 'Publication') {\n      total += quantity * (quantity < 5 ? 16 : quantity < 10 ? 14 : 13);\n    }\n  });\n\n  return total.toString();\n}\n\nexport function updateSelectedProductsMessage(): void {\n  const selectedProductsWrapper = document.querySelector('[data-selected-products]') as HTMLElement;\n  const selectedProductElements = selectedProductsWrapper.querySelectorAll('.selected-product');\n  const selectedProductCount = document.querySelector(\n    '[data-selected-product-count]'\n  ) as HTMLElement;\n  const nextStepButtons = document.querySelectorAll(\n    '[data-action=\"next-step\"]'\n  ) as NodeListOf<HTMLButtonElement>;\n\n  const productCount = selectedProductElements.length;\n  const disabled = productCount === 0;\n\n  nextStepButtons?.forEach((element) => {\n    element.classList.toggle('is-disabled', disabled);\n    element.toggleAttribute('disabled', disabled);\n  });\n  selectedProductCount.innerHTML =\n    productCount === 0\n      ? '<span>Aucune ressource s\u00E9lectionn\u00E9e</span>'\n      : `<span class=\"product-count\">${productCount}</span> ressource${productCount > 1 ? 's' : ''} s\u00E9lectionn\u00E9e${productCount > 1 ? 's' : ''}`;\n}\n", "import {\n  removeProductFromCookie,\n  updateCookie,\n  updateProductQuantityInCookie,\n} from './cookieManager';\nimport { calculatePricing, updateSelectedProductsMessage } from './pricing';\n\nexport function addProductToSelectedList(\n  productType: string,\n  productTitle: string,\n  quantity: number = 1,\n  quantityA3: number = 0,\n  quantityA2: number = 0\n): void {\n  const selectedProductsWrapper = document.querySelector('[data-selected-products]') as HTMLElement;\n  const selectedProductElement = document.createElement('div');\n  selectedProductElement.classList.add('selected-product');\n\n  if (productType === 'Infographie') {\n    selectedProductElement.innerHTML = `\n      <div class=\"selected-product-item\">\n        <span class=\"text-size-small margin-bottom margin-tiny text-color-secondary\">${productType}</span>\n        <span class=\"text-weight-semibold margin-bottom margin-xxsmall\">${productTitle}</span>\n        <span class=\"text-size-tiny margin-bottom margin-tiny\">Quantit\u00E9s:</span>\n        <div class=\"selected-product_actions-wrapper\">\n          <span class=\"selected-product_field-group\">\n            <label>A3:</label>\n            <span>\n              <button class=\"quantity-change\" data-action=\"decrease\" data-format-name=\"A3\">-</button>\n              <input class=\"quantity-input\" type=\"number\" data-format=\"A3\" value=\"${quantityA3}\" min=\"0\">\n              <button class=\"quantity-change\" data-action=\"increase\" data-format-name=\"A3\">+</button>\n            </span>\n          </span>\n          <span class=\"selected-product_field-group\">\n            <label>A2:</label>\n            <span>\n              <button class=\"quantity-change\" data-action=\"decrease\" data-format-name=\"A2\">-</button>\n              <input class=\"quantity-input\" type=\"number\" data-format=\"A2\" value=\"${quantityA2}\" min=\"0\">\n              <button class=\"quantity-change\" data-action=\"increase\" data-format-name=\"A2\">+</button>\n            </span>\n          </span>\n          <button class=\"remove-product text-size-small button is-link\" data-action=\"remove\">Supprimer</button>\n        </div>\n      </div>\n    `;\n  } else {\n    selectedProductElement.innerHTML = `\n      <div class=\"selected-product-item\">\n        <span class=\"text-size-small margin-bottom margin-tiny text-color-secondary\">${productType}</span>\n        <span class=\"text-weight-semibold margin-bottom margin-xxsmall\">${productTitle}</span>\n        <span class=\"text-size-tiny margin-bottom margin-tiny\">Quantit\u00E9s:</span>\n        <div class=\"selected-product_actions-wrapper\">\n          <span>\n            <button class=\"quantity-change\" data-action=\"decrease\">-</button>\n            <input class=\"quantity-input\" type=\"number\" value=\"${quantity}\" min=\"1\">\n            <button class=\"quantity-change\" data-action=\"increase\">+</button>\n          </span>\n          <button class=\"remove-product text-size-small button is-link\" data-action=\"remove\">Supprimer</button>\n        </div>\n      </div>\n    `;\n  }\n\n  selectedProductsWrapper.appendChild(selectedProductElement);\n  updateSelectedProductsMessage();\n  updateCookie();\n\n  selectedProductElement.querySelector('.remove-product')?.addEventListener('click', (event) => {\n    const productElement = (event.target as HTMLElement).closest(\n      '.selected-product'\n    ) as HTMLElement;\n    const productType = productElement.querySelector('.text-size-small')?.textContent;\n    const productTitle = productElement.querySelector('.text-weight-semibold')?.textContent;\n\n    if (productType && productTitle) {\n      productElement.remove();\n      removeProductFromCookie(productType, productTitle);\n      updateSelectedProductsMessage();\n      calculatePricing(); // Update pricing after removing a product\n    }\n  });\n\n  selectedProductElement.querySelectorAll('.quantity-change').forEach((button) => {\n    button.addEventListener('click', (event) => {\n      const input = (event.target as HTMLElement)\n        .closest('span')\n        ?.querySelector('input') as HTMLInputElement;\n      const currentQuantity = isNaN(parseInt(input.value)) ? 0 : parseInt(input.value);\n\n      if ((event.target as HTMLElement).getAttribute('data-action') === 'increase') {\n        input.value = (currentQuantity + 1).toString();\n      } else if (\n        (event.target as HTMLElement).getAttribute('data-action') === 'decrease' &&\n        currentQuantity > 0\n      ) {\n        input.value = (currentQuantity - 1).toString();\n      }\n\n      const format = (event.target as HTMLElement).getAttribute('data-format-name');\n      const productType = selectedProductElement.querySelector('.text-size-small')?.textContent;\n      const productTitle =\n        selectedProductElement.querySelector('.text-weight-semibold')?.textContent;\n\n      if (productType && productTitle) {\n        updateProductQuantityInCookie(\n          productType,\n          productTitle,\n          format ? { [format]: parseInt(input.value) } : { quantity: parseInt(input.value) }\n        );\n        calculatePricing(); // Update pricing after changing quantity\n      }\n    });\n  });\n\n  selectedProductElement.querySelectorAll('.quantity-input').forEach((input) => {\n    input.addEventListener('change', (event) => {\n      const newQuantity = isNaN(parseInt((event.target as HTMLInputElement).value))\n        ? 0\n        : parseInt((event.target as HTMLInputElement).value);\n      const format = (event.target as HTMLInputElement).getAttribute('data-format');\n      const productType = input\n        .closest('.selected-product-item')\n        ?.querySelector('.text-size-small')?.textContent;\n      const productTitle = input\n        .closest('.selected-product-item')\n        ?.querySelector('.text-weight-semibold')?.textContent;\n\n      if (productType && productTitle) {\n        if (newQuantity >= 0) {\n          updateProductQuantityInCookie(\n            productType,\n            productTitle,\n            format ? { [format]: newQuantity } : { quantity: newQuantity }\n          );\n          calculatePricing(); // Update pricing after changing quantity\n        } else {\n          (event.target as HTMLInputElement).value = '0';\n        }\n      }\n    });\n  });\n\n  updateSelectedProductsMessage();\n  calculatePricing();\n}\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { calculatePricing } from './pricing';\nimport { addProductToSelectedList } from './productManager';\n\ninterface Product {\n  type: string;\n  title: string;\n  quantity: number;\n  quantityA3?: number;\n  quantityA2?: number;\n}\n\nexport function setCookie(name: string, value: any, days: number): void {\n  const date = new Date();\n  date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n  document.cookie = `${name}=${JSON.stringify(value)};expires=${date.toUTCString()};path=/`;\n}\n\nexport function getCookie(name: string): any {\n  const nameEQ = `${name}=`;\n  const ca = document.cookie.split(';');\n  for (let i = 0; i < ca.length; i++) {\n    const c = ca[i].trim();\n    if (c.indexOf(nameEQ) === 0) return JSON.parse(c.substring(nameEQ.length));\n  }\n  return null;\n}\n\nexport function updateProductQuantityInCookie(\n  productType: string,\n  productTitle: string,\n  quantities: { [key: string]: number }\n): void {\n  const products: Product[] = getCookie('selectedProducts') || [];\n  const productIndex = products.findIndex(\n    (product) => product.type === productType && product.title === productTitle\n  );\n\n  if (productIndex !== -1) {\n    if (quantities.quantity !== undefined) {\n      products[productIndex].quantity = quantities.quantity;\n    }\n    if (quantities.A3 !== undefined) {\n      products[productIndex].quantityA3 = quantities.A3;\n    }\n    if (quantities.A2 !== undefined) {\n      products[productIndex].quantityA2 = quantities.A2;\n    }\n    setCookie('selectedProducts', products, 7);\n  }\n  calculatePricing();\n}\n\nexport function removeProductFromCookie(productType: string, productTitle: string): void {\n  let products: Product[] = getCookie('selectedProducts') || [];\n  products = products.filter(\n    (product) => !(product.type === productType && product.title === productTitle)\n  );\n  setCookie('selectedProducts', products, 7);\n  calculatePricing();\n}\n\nexport function removeAllProductsFromCookie(): void {\n  setCookie('selectedProducts', [], 7);\n  calculatePricing();\n}\n\nexport function loadProductsFromCookie(): void {\n  const products: Product[] = getCookie('selectedProducts') || [];\n  products.forEach((product) =>\n    addProductToSelectedList(\n      product.type,\n      product.title,\n      product.quantity,\n      product.quantityA3,\n      product.quantityA2\n    )\n  );\n}\n\nexport function updateCookie(): void {\n  const selectedProductsWrapper = document.querySelector('[data-selected-products]') as HTMLElement;\n  const selectedProductElements = selectedProductsWrapper.querySelectorAll('.selected-product');\n  const products: Product[] = Array.from(selectedProductElements).map((productElement) => {\n    const productType = productElement.querySelector('.text-size-small')?.textContent as string;\n    const productTitle = productElement.querySelector('.text-weight-semibold')\n      ?.textContent as string;\n    const quantity =\n      productType === 'Infographie'\n        ? 0\n        : parseInt((productElement.querySelector('.quantity-input') as HTMLInputElement).value);\n    const quantityA3 =\n      productType === 'Infographie'\n        ? parseInt((productElement.querySelector('[data-format=\"A3\"]') as HTMLInputElement).value)\n        : 0;\n    const quantityA2 =\n      productType === 'Infographie'\n        ? parseInt((productElement.querySelector('[data-format=\"A2\"]') as HTMLInputElement).value)\n        : 0;\n    return { type: productType, title: productTitle, quantity, quantityA3, quantityA2 };\n  });\n  setCookie('selectedProducts', products, 7);\n}\n", "import {\n  getCookie,\n  removeAllProductsFromCookie,\n  removeProductFromCookie,\n  updateProductQuantityInCookie,\n} from './cookieManager';\nimport { updateSelectedProductsMessage } from './pricing';\nimport { addProductToSelectedList } from './productManager';\n\nexport function attachAddButtonEvents(): void {\n  document.querySelectorAll('[data-action=\"add\"]').forEach((button) => {\n    button.addEventListener('click', (event) => {\n      const productElement = (event.target as HTMLElement).closest(\n        '[data-product-type]'\n      ) as HTMLElement;\n      const productType = productElement.getAttribute('data-product-type') as string;\n      const productTitle = productElement.querySelector('h3')?.innerText as string;\n\n      if (!isProductSelected(productType, productTitle)) {\n        addProductToSelectedList(productType, productTitle);\n      }\n    });\n  });\n}\n\nfunction isProductSelected(productType: string, productTitle: string): boolean {\n  const products = getCookie('selectedProducts') || [];\n  return products.some(\n    (product: { type: string; title: string }) =>\n      product.type === productType && product.title === productTitle\n  );\n}\n\nexport function attachClearButtonEvents(): void {\n  document.querySelectorAll('[data-action=\"clear\"]').forEach((button) => {\n    button.addEventListener('click', () => {\n      document.querySelectorAll('.selected-product').forEach((productElement) => {\n        productElement.remove();\n      });\n      removeAllProductsFromCookie();\n      updateSelectedProductsMessage();\n    });\n  });\n}\n\nexport function attachRemoveButtonEvents(): void {\n  document.querySelectorAll('.remove-product').forEach((button) => {\n    button.addEventListener('click', (event) => {\n      const productElement = (event.target as HTMLElement).closest(\n        '.selected-product'\n      ) as HTMLElement;\n      const productType = productElement.querySelector('.text-size-small')?.textContent as string;\n      const productTitle = productElement.querySelector('.text-weight-semibold')\n        ?.textContent as string;\n\n      if (productType && productTitle) {\n        productElement.remove();\n        removeProductFromCookie(productType, productTitle);\n        updateSelectedProductsMessage();\n      }\n    });\n  });\n}\n\nexport function attachQuantityChangeEvents(): void {\n  document.querySelectorAll('.quantity-change').forEach((button) => {\n    button.addEventListener('click', (event) => {\n      const input = (event.target as HTMLElement)\n        .closest('span')\n        ?.querySelector('input') as HTMLInputElement;\n      const currentQuantity = isNaN(parseInt(input.value)) ? 0 : parseInt(input.value);\n\n      if ((event.target as HTMLElement).getAttribute('data-action') === 'increase') {\n        input.value = (currentQuantity + 1).toString();\n      } else if (\n        (event.target as HTMLElement).getAttribute('data-action') === 'decrease' &&\n        currentQuantity > 0\n      ) {\n        input.value = (currentQuantity - 1).toString();\n      }\n\n      const format = (event.target as HTMLElement).getAttribute('data-format-name');\n      const productType = input.closest('.selected-product-item')?.querySelector('.text-size-small')\n        ?.textContent as string;\n      const productTitle = input\n        .closest('.selected-product-item')\n        ?.querySelector('.text-weight-semibold')?.textContent as string;\n\n      if (productType && productTitle) {\n        updateProductQuantityInCookie(\n          productType,\n          productTitle,\n          format ? { [format]: parseInt(input.value) } : { quantity: parseInt(input.value) }\n        );\n      }\n    });\n  });\n\n  document.querySelectorAll('.quantity-input').forEach((input) => {\n    input.addEventListener('change', (event) => {\n      const newQuantity = isNaN(parseInt((event.target as HTMLInputElement).value))\n        ? 0\n        : parseInt((event.target as HTMLInputElement).value);\n      const format = (event.target as HTMLInputElement).getAttribute('data-format') as string;\n      const productType = input.closest('.selected-product-item')?.querySelector('.text-size-small')\n        ?.textContent as string;\n      const productTitle = input\n        .closest('.selected-product-item')\n        ?.querySelector('.text-weight-semibold')?.textContent as string;\n\n      if (productType && productTitle) {\n        if (newQuantity >= 0) {\n          updateProductQuantityInCookie(\n            productType,\n            productTitle,\n            format ? { [format]: newQuantity } : { quantity: newQuantity }\n          );\n        } else {\n          (event.target as HTMLInputElement).value = '0';\n        }\n      }\n    });\n  });\n}\n", "import { getCookie } from './cookieManager';\nimport { getPricing } from './pricing';\n\ninterface Product {\n  type: string;\n  title: string;\n  quantity: number;\n  quantityA3?: number;\n  quantityA2?: number;\n}\n\nexport function initSteps(): void {\n  const step1Div = document.querySelector('[data-step=\"1\"]') as HTMLElement;\n  const step2Div = document.querySelector('[data-step=\"2\"]') as HTMLElement;\n  const nextStepButtons = document.querySelectorAll(\n    '[data-action=\"next-step\"]'\n  ) as NodeListOf<HTMLButtonElement>;\n  const previousStepButton = document.querySelector('#previous-to-step-1') as HTMLButtonElement;\n  const textarea = document.querySelector('[data-text-area]') as HTMLTextAreaElement;\n\n  step2Div.style.display = 'none';\n  if (nextStepButtons) {\n    nextStepButtons.forEach((button) => {\n      button.addEventListener('click', () => {\n        if (step1Div && step2Div && !button.hasAttribute('disabled')) {\n          step1Div.style.display = 'none';\n          step2Div.style.display = 'block';\n\n          const products: Product[] = getCookie('selectedProducts') || [];\n          let emailContent = `Prix : ${getPricing()} CHF\\n+9 CHF de frais de port\\n\\nProduits s\u00E9lectionn\u00E9s:\\n`;\n          emailContent += products\n            .map((product) => {\n              const { type, title, quantity, quantityA3, quantityA2 } = product;\n              if (type === 'Infographie') {\n                return `${type}: ${title} - A3: ${quantityA3} - A2: ${quantityA2}`;\n              }\n              return `${type}: ${title} - Quantit\u00E9: ${quantity}`;\n            })\n            .join('\\n');\n\n          if (textarea) {\n            textarea.value = emailContent;\n            textarea.disabled = true;\n          }\n        }\n      });\n    });\n  }\n\n  if (previousStepButton) {\n    previousStepButton.addEventListener('click', () => {\n      if (step1Div && step2Div) {\n        step2Div.style.display = 'none';\n        step1Div.style.display = 'block';\n      }\n    });\n  }\n}\n", "import { loadProductsFromCookie } from './utils/cookieManager';\nimport {\n  attachAddButtonEvents,\n  attachClearButtonEvents,\n  attachQuantityChangeEvents,\n  attachRemoveButtonEvents,\n} from './utils/eventHandlers';\nimport { calculatePricing, updateSelectedProductsMessage } from './utils/pricing';\nimport { initSteps } from './utils/stepsManager';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  loadProductsFromCookie();\n  updateSelectedProductsMessage();\n  calculatePricing();\n  attachAddButtonEvents();\n  attachRemoveButtonEvents();\n  attachQuantityChangeEvents();\n  attachClearButtonEvents();\n  initSteps();\n});\n"],
  "mappings": "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",
  "names": ["productType", "productTitle"]
}
