{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/utils/getFunctions.ts", "../src/utils/updateFunctions.ts", "../src/utils/handlersFunctions.ts", "../src/utils/productManager.ts", "../src/utils/cookieManager.ts", "../src/utils/eventHandlers.ts", "../src/utils/stepsManager.ts", "../src/index.ts"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "import { getCookie } from './cookieManager';\nimport type { Product } from './type';\n\nexport function getPricing(): string {\n  const products: Product[] = getCookie('selectedProducts') || [];\n  let total = 0;\n\n  products.forEach((product) => {\n    const { type, quantity, quantityA3 = 0, quantityA2 = 0 } = product;\n    if (type === 'Infographie') {\n      total += quantityA2 * 6 + quantityA3 * (quantityA3 < 10 ? 4 : 3);\n    } else if (type === 'Brochure') {\n      total += quantity * (quantity < 10 ? 9 : quantity < 30 ? 8 : 7);\n    } else if (type === 'Publication') {\n      total += quantity * (quantity < 5 ? 16 : quantity < 10 ? 14 : 13);\n    }\n  });\n\n  return total.toString();\n}\n\nexport function getResourcePricing(product: Product): number {\n  const { type, quantity, quantityA3 = 0, quantityA2 = 0 } = product;\n  if (type === 'Infographie') {\n    return quantityA2 * 6 + quantityA3 * (quantityA3 < 10 ? 4 : 3);\n  }\n  if (type === 'Brochure') {\n    return quantity * (quantity < 10 ? 9 : quantity < 30 ? 8 : 7);\n  }\n  if (type === 'Publication') {\n    return quantity * (quantity < 5 ? 16 : quantity < 10 ? 14 : 13);\n  }\n\n  return 0;\n}\n", "import { getCookie, setCookie } from './cookieManager';\nimport type { Product } from './type';\n\nexport function updatePricing(): void {\n  const products: Product[] = getCookie('selectedProducts') || [];\n  let total = 0;\n\n  products.forEach((product) => {\n    const { type, quantity, quantityA3 = 0, quantityA2 = 0 } = product;\n    if (type === 'Infographie') {\n      total += quantityA2 * 6 + quantityA3 * (quantityA3 < 10 ? 4 : 3);\n    } else if (type === 'Brochure') {\n      total += quantity * (quantity < 10 ? 9 : quantity < 30 ? 8 : 7);\n    } else if (type === 'Publication') {\n      total += quantity * (quantity < 5 ? 16 : quantity < 10 ? 14 : 13);\n    }\n  });\n\n  const countTotalElement = document.querySelector('[data-nmra-element=\"total\"]') as HTMLElement;\n  countTotalElement.textContent = total.toString();\n}\n\nexport function updateResourceCount(): void {\n  const selectedProductsWrapper = document.querySelector(\n    '[data-nmra-element=\"list\"]'\n  ) as HTMLElement;\n  const selectedProductElements = selectedProductsWrapper.querySelectorAll('.selected-product');\n  const selectedProductCount = document.querySelector('[data-nmra-element=\"count\"]') as HTMLElement;\n  const nextStepButtons = document.querySelectorAll(\n    '[data-nmra-action=\"next-step\"]'\n  ) as NodeListOf<HTMLButtonElement>;\n\n  const productCount = selectedProductElements.length;\n  const disabled = productCount === 0;\n\n  nextStepButtons?.forEach((element) => {\n    if (disabled) {\n      element.classList.add('is-disabled');\n      element.setAttribute('disabled', disabled.toString());\n    } else {\n      element.classList.remove('is-disabled');\n      element.removeAttribute('disabled');\n    }\n  });\n  selectedProductCount.innerHTML =\n    productCount === 0\n      ? '<span>Aucune ressource s\u00E9lectionn\u00E9e</span>'\n      : `<span class=\"product-count\">${productCount}</span> ressource${productCount > 1 ? 's' : ''} s\u00E9lectionn\u00E9e${productCount > 1 ? 's' : ''}`;\n}\n\nexport function updateResourceQuantityInCookie(\n  productType: string,\n  productTitle: string,\n  quantities: { [key: string]: number }\n): void {\n  const products: Product[] = getCookie('selectedProducts') || [];\n  const productIndex = products.findIndex(\n    (product) => product.type === productType && product.title === productTitle\n  );\n\n  if (productIndex !== -1) {\n    if (quantities.quantity !== undefined) {\n      products[productIndex].quantity = quantities.quantity;\n    }\n    if (quantities.A3 !== undefined) {\n      products[productIndex].quantityA3 = quantities.A3;\n    }\n    if (quantities.A2 !== undefined) {\n      products[productIndex].quantityA2 = quantities.A2;\n    }\n    setCookie('selectedProducts', products, 7);\n  }\n  updatePricing();\n}\n", "import { getCookie, removeAllResourcesFromCookie, removeResourceFromCookie } from './cookieManager';\nimport { getPricing, getResourcePricing } from './getFunctions';\nimport { addResourceToSelectedList } from './productManager';\nimport type { Product } from './type';\nimport {\n  updatePricing,\n  updateResourceCount,\n  updateResourceQuantityInCookie,\n} from './updateFunctions';\n\nfunction resourceAlreadySelected(productType: string, productTitle: string): boolean {\n  const products = getCookie('selectedProducts') || [];\n  return products.some(\n    (product: { type: string; title: string }) =>\n      product.type === productType && product.title === productTitle\n  );\n}\n\nexport function handleRemove(event: Event): void {\n  const productElement = (event.target as HTMLElement).closest('.selected-product') as HTMLElement;\n  const productType = productElement.querySelector('.nmra-resource_type')?.textContent;\n  const productTitle = productElement.querySelector('.nmra-resource_name')?.textContent;\n\n  if (productType && productTitle) {\n    productElement.remove();\n    removeResourceFromCookie(productType, productTitle);\n    updateResourceCount();\n    updatePricing(); // Update pricing after removing a product\n  }\n}\n\nexport function handleInscrease(event: Event): void {\n  const input = (event.target as HTMLElement)\n    .closest('.nmra-resource_quantity-group')\n    ?.querySelector('input') as HTMLInputElement;\n  const format = input.getAttribute('data-nmra-format');\n  const resourceType = input\n    .closest('[data-nmra-element=\"card\"]')\n    ?.querySelector('.nmra-resource_type')?.textContent;\n  const resourceName = input\n    .closest('[data-nmra-element=\"card\"]')\n    ?.querySelector('.nmra-resource_name');\n\n  const currentQuantity = isNaN(parseInt(input.value)) ? 0 : parseInt(input.value);\n  input.value = (currentQuantity + 1).toString();\n\n  if (resourceType && resourceName) {\n    updateResourceQuantityInCookie(\n      resourceType,\n      resourceName.textContent as string,\n      format ? { [format]: parseInt(input.value) } : { quantity: parseInt(input.value) }\n    );\n    updatePricing(); // Update pricing after changing quantity\n  }\n}\n\nexport function handleDecrease(event: Event): void {\n  const input = (event.target as HTMLElement)\n    .closest('.nmra-resource_quantity-group')\n    ?.querySelector('input') as HTMLInputElement;\n  const format = input.getAttribute('data-nmra-format');\n  const resourceType = input\n    .closest('[data-nmra-element=\"card\"]')\n    ?.querySelector('.nmra-resource_type')?.textContent;\n  const resourceName = input\n    .closest('[data-nmra-element=\"card\"]')\n    ?.querySelector('.nmra-resource_name');\n\n  const currentQuantity = isNaN(parseInt(input.value)) ? 0 : parseInt(input.value);\n  if (currentQuantity > 0) {\n    input.value = (currentQuantity - 1).toString();\n  }\n\n  if (resourceType && resourceName) {\n    updateResourceQuantityInCookie(\n      resourceType,\n      resourceName.textContent as string,\n      format ? { [format]: parseInt(input.value) } : { quantity: parseInt(input.value) }\n    );\n    updatePricing(); // Update pricing after changing quantity\n  }\n}\n\nexport function handleInputChange(event: Event): void {\n  const input = event.target as HTMLInputElement;\n  const newQuantity = isNaN(parseInt(input.value)) ? 0 : parseInt(input.value);\n  const format = input.getAttribute('data-nmra-format');\n  const resourceType = input\n    .closest('[data-nmra-element=\"card\"]')\n    ?.querySelector('.nmra-resource_type')?.textContent;\n  const resourceName = input\n    .closest('[data-nmra-element=\"card\"]')\n    ?.querySelector('.nmra-resource_name');\n\n  if (resourceType && resourceName) {\n    if (newQuantity >= 0) {\n      updateResourceQuantityInCookie(\n        resourceType,\n        resourceName.textContent as string,\n        format ? { [format]: newQuantity } : { quantity: newQuantity }\n      ); // Update pricing after changing quantity\n    } else {\n      input.value = '0';\n    }\n    updatePricing();\n  }\n}\n\nexport function handleAddResource(event: Event): void {\n  const productElement = (event.target as HTMLElement).closest(\n    '[data-nmra-element=\"resource\"]'\n  ) as HTMLElement;\n  const titleElement = productElement.querySelector('[data-nmra-element=\"title\"]') as HTMLElement;\n  const resourceTitle = titleElement?.innerText as string;\n  const resourceType = titleElement.getAttribute('data-nmra-type') as string;\n  if (!resourceAlreadySelected(resourceType, resourceTitle)) {\n    addResourceToSelectedList(resourceType, resourceTitle);\n  }\n}\n\nexport function handleClearAll(): void {\n  document.querySelectorAll('.selected-product').forEach((productElement) => {\n    productElement.remove();\n  });\n  removeAllResourcesFromCookie();\n  updateResourceCount();\n  updatePricing();\n}\n\nfunction createResourceRow(product: Product): string {\n  const { type, title, quantity, quantityA3, quantityA2 } = product;\n  return `\n    <div class=\"order-summary_row\" >\n      <div class=\"order-summary_cell main\">${title}</div>\n      <div class=\"order-summary_cell\">${type}</div>\n      <div class=\"order-summary_cell\">${type === 'Infographie' ? `A3: ${quantityA3} <br> A2: ${quantityA2}` : `${quantity}`}</div>\n      <div class=\"order-summary_cell price\">${getResourcePricing(product)}.-</div>\n    </div>\n  `;\n}\n\nexport function handleNextStep(): void {\n  const step1Div = document.querySelector('[data-nmra-element=\"step1\"]') as HTMLElement;\n  const step2Div = document.querySelector('[data-nmra-element=\"step2\"]') as HTMLElement;\n  const textarea = document.querySelector('[data-nmra-element=\"text-area\"]') as HTMLTextAreaElement;\n  const totalPricing = document.querySelector('[data-nmra-element=\"total-price\"]') as HTMLElement;\n  const summaryContent = document.querySelector(\n    '[data-nmra-element=\"summary-content\"]'\n  ) as HTMLElement;\n  const summaryWrapper = document.querySelector(\n    '[data-nmra-element=\"summary-wrapper\"]'\n  ) as HTMLElement;\n\n  if (totalPricing) {\n    totalPricing.textContent = `${parseInt(getPricing()) + 9}.- CHF`;\n  }\n\n  if (step1Div && step2Div) {\n    step1Div.style.display = 'none';\n    step2Div.style.display = 'block';\n\n    const products = getCookie('selectedProducts') || [];\n    // let emailContent = `Prix : ${getPricing()} CHF\\n+9 CHF de frais de port\\n\\nProduits s\u00E9lectionn\u00E9s:\\n`;\n\n    products.map((product: Product) => {\n      // const { type, title, quantity, quantityA3, quantityA2 } = product;\n      const productElement = document.createElement('div');\n      productElement.classList.add('order-summary_row');\n      productElement.innerHTML = createResourceRow(product);\n      summaryContent.appendChild(productElement);\n\n      // if (type === 'Infographie') {\n      //   emailContent += `${type}: ${title} - A3: ${quantityA3} - A2: ${quantityA2}\\n`;\n      // } else {\n      //   emailContent += `${type}: ${title} - Quantit\u00E9: ${quantity}\\n`;\n      // }\n    });\n\n    if (textarea) {\n      textarea.value = `<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/@numeraswiss/minds-order-form@latest/dist/emailstyle.css\">\\n${summaryWrapper.innerHTML}`;\n      textarea.disabled = true;\n    }\n  }\n}\n\nexport function handlePreviousStep(): void {\n  const step1Div = document.querySelector('[data-nmra-action=\"step1\"]') as HTMLElement;\n  const step2Div = document.querySelector('[data-nmra-action=\"step2\"]') as HTMLElement;\n  if (step1Div && step2Div) {\n    step1Div.style.display = 'block';\n    step2Div.style.display = 'none';\n  }\n}\n", "import { updateCookie } from './cookieManager';\nimport {\n  handleDecrease,\n  handleInputChange,\n  handleInscrease,\n  handleRemove,\n} from './handlersFunctions';\nimport { updatePricing, updateResourceCount } from './updateFunctions';\n\nexport function addResourceToSelectedList(\n  productType: string,\n  productTitle: string,\n  quantity: number = 1,\n  quantityA3: number = 0,\n  quantityA2: number = 0\n): void {\n  const selectedProductsWrapper = document.querySelector(\n    '[data-nmra-element=\"list\"]'\n  ) as HTMLElement;\n  const selectedProductElement = document.createElement('div');\n  selectedProductElement.classList.add('selected-product');\n\n  if (productType === 'Infographie') {\n    selectedProductElement.innerHTML = `\n      <div class=\"selected-product-item\" data-nmra-element=\"card\">\n        <span class=\"nmra-resource_type\" >${productType}</span>\n        <span class=\"nmra-resource_name\">${productTitle}</span>\n        <span class=\"nmra-resource_quantity-title\">Quantit\u00E9s:</span>\n        <div class=\"nmra-resource_quantity-wrapper\">\n          <div class=\"nmra-resource_quantity-group\">\n            <label class=\"nmra-resource-format\">A3:</label>\n            <input class=\"quantity-input\" type=\"number\" data-nmra-format=\"A3\" value=\"${quantityA3}\" min=\"0\">\n            <div class=\"quantity-button_wrapper\">\n              <button class=\"quantity-change\" data-nmra-action=\"decrease\">-</button>\n              <button class=\"quantity-change\" data-nmra-action=\"increase\">+</button>\n            </div>\n          </div>\n          <div class=\"nmra-resource_quantity-group\">\n            <label class=\"nmra-resource-format\">A2:</label>\n            <input class=\"quantity-input\" type=\"number\" data-nmra-format=\"A2\" value=\"${quantityA2}\" min=\"0\">\n            <div class=\"quantity-button_wrapper\">\n              <button class=\"quantity-change\" data-nmra-action=\"decrease\">-</button>\n              <button class=\"quantity-change\" data-nmra-action=\"increase\">+</button>\n            </div>\n          </div>\n          <button class=\"remove-product\" data-nmra-action=\"remove\">Supprimer</button>\n        </div>\n      </div>\n    `;\n  } else {\n    selectedProductElement.innerHTML = `\n    <div class=\"selected-product-item\" data-nmra-element=\"card\">\n        <span class=\"nmra-resource_type\">${productType}</span>\n        <span class=\"nmra-resource_name\">${productTitle}</span>\n        <span class=\"nmra-resource_quantity-title\">Quantit\u00E9s :</span>\n        <div class=\"nmra-resource_quantity-wrapper\">\n          <div class=\"nmra-resource_quantity-group\">\n            <input class=\"quantity-input\" type=\"number\" value=\"${quantity}\" min=\"1\">\n            <div class=\"quantity-button_wrapper\">\n              <button class=\"quantity-change\" data-nmra-action=\"decrease\">-</button>\n              <button class=\"quantity-change\" data-nmra-action=\"increase\">+</button>\n            </div>\n          </div>\n          <button class=\"remove-product\" data-nmra-action=\"remove\">Supprimer</button>\n        </div>\n      </div>\n    `;\n  }\n\n  selectedProductsWrapper.appendChild(selectedProductElement);\n\n  selectedProductElement\n    .querySelector('[data-nmra-action=\"remove\"]')\n    ?.addEventListener('click', handleRemove);\n\n  selectedProductElement.querySelectorAll('[data-nmra-action=\"increase\"]').forEach((button) => {\n    button.addEventListener('click', handleInscrease);\n  });\n\n  selectedProductElement.querySelectorAll('[data-nmra-action=\"decrease\"]').forEach((button) => {\n    button.addEventListener('click', handleDecrease);\n  });\n\n  selectedProductElement.querySelectorAll('.quantity-input').forEach((input) => {\n    input.addEventListener('change', handleInputChange);\n  });\n\n  updateResourceCount();\n  updateCookie();\n  updatePricing();\n}\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { addResourceToSelectedList } from './productManager';\nimport type { Product } from './type';\nimport { updatePricing, updateResourceCount } from './updateFunctions';\n\nexport function setCookie(name: string, value: any, days: number): void {\n  const date = new Date();\n  date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n  document.cookie = `${name}=${JSON.stringify(value)};expires=${date.toUTCString()};path=/`;\n}\n\nexport function getCookie(name: string): any {\n  const nameEQ = `${name}=`;\n  const ca = document.cookie.split(';');\n  for (let i = 0; i < ca.length; i++) {\n    const c = ca[i].trim();\n    if (c.indexOf(nameEQ) === 0) return JSON.parse(c.substring(nameEQ.length));\n  }\n  return null;\n}\n\nexport function removeResourceFromCookie(productType: string, productTitle: string): void {\n  let products: Product[] = getCookie('selectedProducts') || [];\n  products = products.filter(\n    (product) => !(product.type === productType && product.title === productTitle)\n  );\n  setCookie('selectedProducts', products, 7);\n  updatePricing();\n}\n\nexport function removeAllResourcesFromCookie(): void {\n  setCookie('selectedProducts', [], 7);\n  updatePricing();\n}\n\nexport function loadResourcesFromCookie(): void {\n  const products: Product[] = getCookie('selectedProducts') || [];\n  products.forEach((product) =>\n    addResourceToSelectedList(\n      product.type,\n      product.title,\n      product.quantity,\n      product.quantityA3,\n      product.quantityA2\n    )\n  );\n  updatePricing();\n  updateResourceCount();\n}\n\nexport function updateCookie(): void {\n  const selectedProductsWrapper = document.querySelector(\n    '[data-nmra-element=\"list\"]'\n  ) as HTMLElement;\n  const selectedProductElements = selectedProductsWrapper.querySelectorAll('.selected-product');\n  const products: Product[] = Array.from(selectedProductElements).map((productElement) => {\n    const productType = productElement.querySelector('.nmra-resource_type')?.textContent as string;\n    const productTitle = productElement.querySelector('.nmra-resource_name')?.textContent as string;\n    const quantity =\n      productType === 'Infographie'\n        ? 0\n        : parseInt((productElement.querySelector('.quantity-input') as HTMLInputElement).value);\n    const quantityA3 =\n      productType === 'Infographie'\n        ? parseInt(\n            (productElement.querySelector('[data-nmra-format=\"A3\"]') as HTMLInputElement).value\n          )\n        : 0;\n    const quantityA2 =\n      productType === 'Infographie'\n        ? parseInt(\n            (productElement.querySelector('[data-nmra-format=\"A2\"]') as HTMLInputElement).value\n          )\n        : 0;\n    return { type: productType, title: productTitle, quantity, quantityA3, quantityA2 };\n  });\n  setCookie('selectedProducts', products, 7);\n}\n", "import { handleAddResource, handleClearAll } from './handlersFunctions';\n\nexport function attachAddButtonEvents(): void {\n  document.querySelectorAll('[data-nmra-action=\"add\"]').forEach((button) => {\n    button.addEventListener('click', handleAddResource);\n  });\n}\n\nexport function attachClearButtonEvents(): void {\n  document.querySelectorAll('[data-action=\"clear\"]').forEach((button) => {\n    button.addEventListener('click', handleClearAll);\n  });\n}\n\nexport function attachStepsButtonEvents(): void {}\n// export function attachRemoveButtonEvents(): void {\n//   document.querySelectorAll('.remove-product').forEach((button) => {\n//     button.addEventListener('click', (event) => {\n//       const productElement = (event.target as HTMLElement).closest(\n//         '.selected-product'\n//       ) as HTMLElement;\n//       const productType = productElement.querySelector('.text-size-small')?.textContent as string;\n//       const productTitle = productElement.querySelector('.text-weight-semibold')\n//         ?.textContent as string;\n\n//       if (productType && productTitle) {\n//         productElement.remove();\n//         removeResourceFromCookie(productType, productTitle);\n//         updateResourceCount();\n//       }\n//     });\n//   });\n// }\n\n// export function attachQuantityChangeEvents(): void {\n//   document.querySelectorAll('.quantity-change').forEach((button) => {\n//     button.addEventListener('click', (event) => {\n//       const input = (event.target as HTMLElement)\n//         .closest('span')\n//         ?.querySelector('input') as HTMLInputElement;\n//       const currentQuantity = isNaN(parseInt(input.value)) ? 0 : parseInt(input.value);\n\n//       if ((event.target as HTMLElement).getAttribute('data-action') === 'increase') {\n//         input.value = (currentQuantity + 1).toString();\n//       } else if (\n//         (event.target as HTMLElement).getAttribute('data-action') === 'decrease' &&\n//         currentQuantity > 0\n//       ) {\n//         input.value = (currentQuantity - 1).toString();\n//       }\n\n//       const format = (event.target as HTMLElement).getAttribute('data-format-name');\n//       const productType = input.closest('.selected-product-item')?.querySelector('.text-size-small')\n//         ?.textContent as string;\n//       const productTitle = input\n//         .closest('.selected-product-item')\n//         ?.querySelector('.text-weight-semibold')?.textContent as string;\n\n//       if (productType && productTitle) {\n//         updateResourceQuantityInCookie(\n//           productType,\n//           productTitle,\n//           format ? { [format]: parseInt(input.value) } : { quantity: parseInt(input.value) }\n//         );\n//       }\n\n//       if (!quantitiesAreSet()) {\n//         (event.target as HTMLElement).setAttribute('disabled', 'true');\n//       } else {\n//         (event.target as HTMLElement).removeAttribute('disabled');\n//         document.querySelector('.alert-message')?.remove();\n//       }\n//     });\n//   });\n\n//   document.querySelectorAll('.quantity-input').forEach((input) => {\n//     input.addEventListener('change', (event) => {\n//       const newQuantity = isNaN(parseInt((event.target as HTMLInputElement).value))\n//         ? 0\n//         : parseInt((event.target as HTMLInputElement).value);\n//       const format = (event.target as HTMLInputElement).getAttribute('data-format') as string;\n//       const productType = input.closest('.selected-product-item')?.querySelector('.text-size-small')\n//         ?.textContent as string;\n//       const productTitle = input\n//         .closest('.selected-product-item')\n//         ?.querySelector('.text-weight-semibold')?.textContent as string;\n\n//       if (productType && productTitle) {\n//         if (newQuantity >= 0) {\n//           updateResourceQuantityInCookie(\n//             productType,\n//             productTitle,\n//             format ? { [format]: newQuantity } : { quantity: newQuantity }\n//           );\n//         } else {\n//           (event.target as HTMLInputElement).value = '0';\n//         }\n//       }\n//     });\n//   });\n// }\n", "import { getCookie } from './cookieManager';\nimport { handleNextStep, handlePreviousStep } from './handlersFunctions';\n\ninterface Product {\n  type: string;\n  title: string;\n  quantity: number;\n  quantityA3?: number;\n  quantityA2?: number;\n}\n\nexport function quantitiesAreSet(): boolean {\n  const products: Product[] = getCookie('selectedProducts') || [];\n  if (\n    products.every(\n      (product) => product.quantity !== 0 && product.quantityA3 !== 0 && product.quantityA2 !== 0\n    )\n  ) {\n    // Check if any selectedProducts has all three possible quantity to 0\n    const orderProductSelectedWrapper = document.querySelector(\n      '.order_product-selected-wrapper'\n    ) as HTMLElement;\n    const alertDiv = document.createElement('div');\n    alertDiv.classList.add('alert-message');\n    alertDiv.textContent = \"Certain produits n'ont pas de quantit\u00E9 s\u00E9lectionn\u00E9e.\";\n    orderProductSelectedWrapper.insertBefore(alertDiv, orderProductSelectedWrapper.firstChild);\n\n    return false;\n  }\n\n  return true;\n}\n\nexport function initSteps(): void {\n  const step2Div = document.querySelector('[data-nmra-element=\"step2\"]') as HTMLElement;\n  const nextStepButtons = document.querySelectorAll(\n    '[data-nmra-action=\"next-step\"]'\n  ) as NodeListOf<HTMLButtonElement>;\n  const previousStepButton = document.querySelectorAll(\n    '[data-nmra-action=\"previous-step\"]'\n  ) as NodeListOf<HTMLButtonElement>;\n\n  step2Div.style.display = 'none';\n  if (nextStepButtons) {\n    nextStepButtons.forEach((button) => {\n      button.addEventListener('click', handleNextStep);\n    });\n  }\n\n  if (previousStepButton) {\n    previousStepButton.forEach((button) => {\n      button.addEventListener('click', handlePreviousStep);\n    });\n  }\n}\n", "import { loadResourcesFromCookie } from './utils/cookieManager';\nimport { attachAddButtonEvents, attachClearButtonEvents } from './utils/eventHandlers';\nimport { initSteps } from './utils/stepsManager';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  loadResourcesFromCookie();\n  attachAddButtonEvents();\n  attachClearButtonEvents();\n  initSteps();\n});\n"],
  "mappings": "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",
  "names": []
}
